
##################################################################################
# 
# This file is automatically generated using templates. Changes to this file
# should happen through editing the templates under .action_templates/*
# Manual edits will be overwritten.
#
##################################################################################

name: Run Single E2E
on:
  # template: .action_templates/events/single-e2e-workflow-dispatch.yaml
  workflow_dispatch:
    inputs:
      distro:
        description: Distro to run test
        required: true
        default: ubuntu
      test-name:
        description: Name of test to run
        required: true
      cluster-wide:
        description: Whether or not the test is cluster wide
        required: true
        default: 'false'
jobs:
  # template: .action_templates/jobs/display-github-context.yaml
  action-context:
    if: always()
    runs-on: ubuntu-latest
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: echo "$GITHUB_CONTEXT"
  # template: .action_templates/jobs/setup.yaml
  setup:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
        - pipeline-argument: operator-ubi
        - pipeline-argument: version-post-start-hook-init
        - pipeline-argument: readiness-probe-init
        - pipeline-argument: agent-ubi
        - pipeline-argument: e2e
    steps:
    # template: .action_templates/steps/checkout.yaml
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        submodules: true
    # template: .action_templates/steps/setup-and-install-python.yaml
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.4
    - name: Cache Dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ hashFiles('requirements.txt') }}
    - name: Install Python Dependencies
      run: pip install -r requirements.txt
    # template: .action_templates/steps/quay-login.yaml
    - name: Login to Quay.io
      uses: docker/login-action@v1
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_ROBOT_TOKEN }}
    # template: .action_templates/steps/build-and-push-development-images.yaml
    - name: Build and Push Images
      run: |
        python pipeline.py --image-name ${{ matrix.pipeline-argument }} --release false
      env:
        MONGODB_COMMUNITY_CONFIG: ${{ github.workspace }}/scripts/ci/config.json
        version_id: ${{ github.run_id }}
  # template: .action_templates/jobs/single-test.yaml
  single-test:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
    # template: .action_templates/steps/checkout.yaml
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        submodules: true
    # template: .action_templates/steps/setup-and-install-python.yaml
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.4
    - name: Cache Dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ hashFiles('requirements.txt') }}
    - name: Install Python Dependencies
      run: pip install -r requirements.txt
    # template: .action_templates/steps/setup-kind-cluster.yaml
    - name: Setup Kind Cluster
      run: |
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.11.1/kind-linux-amd64
        chmod +x ./kind
        ./kind create cluster
    - name: Create Directories
      run: |
        docker exec kind-control-plane  mkdir -p /opt/data/mongo-data-0 /opt/data/mongo-data-1 /opt/data/mongo-data-2 /opt/data/mongo-logs-0 /opt/data/mongo-logs-1 /opt/data/mongo-logs-2

    - name: Install CRD
      run: kubectl apply -f config/crd/bases/mongodbcommunity.mongodb.com_mongodbcommunity.yaml
    # template: .action_templates/steps/run-test-single.yaml
    - name: Run Test Single
      run: |
        python3 ./scripts/dev/e2e.py --test ${{ github.event.inputs.test-name }} --tag ${{ github.run_id }} --config_file ./scripts/ci/config.json --distro ${{ github.event.inputs.distro }} --cluster-wide ${{ github.event.inputs.cluster-wide }}
    # template: .action_templates/steps/dump-and-upload-diagnostics-always.yaml
    - name: Dump Diagnostics
      if: always()
      continue-on-error: true
      run: scripts/ci/dump_diagnostics.sh default # default since kind is running in the default namespace

    - name: Upload Diagnostics
      if: always()
      uses: actions/upload-artifact@v2
      continue-on-error: true
      with:
        name: ${{ github.event.inputs.test-name }}-${{ github.event.inputs.distro
          }}-diagnostics
        path: ${{ github.workspace }}/diagnostics
