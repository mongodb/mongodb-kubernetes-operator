vars:
  registry: <registry>

images:
  - name: agent-ubuntu
    vars:
      context: .
      template_context: scripts/dev/templates/agent

    inputs:
      - agent_version
      - tools_version
      - agent_image
      - agent_image_dev

    platform: linux/amd64
    stages:
      - name: agent-ubuntu-context
        task_type: docker_build
        dockerfile: scripts/dev/templates/agent/Dockerfile.builder
        tags: ["ubuntu"]
        buildargs:
          agent_version: $(inputs.params.agent_version)
          tools_version: $(inputs.params.tools_version)
          agent_distro: linux_x86_64
          tools_distro: ubuntu1604-x86_64

        labels:
          quay.expires-after: 48h

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.agent_image_dev)
            tag: $(inputs.params.version_id)-context

      - name: agent-template-ubuntu
        task_type: dockerfile_template
        tags: ["ubuntu"]
        distro: ubuntu

        output:
          - dockerfile: scripts/dev/templates/agent/Dockerfile.ubuntu-$(inputs.params.version_id)

      - name: agent-ubuntu-build
        task_type: docker_build
        tags: ["ubuntu"]

        dockerfile: scripts/dev/templates/agent/Dockerfile.ubuntu-$(inputs.params.version_id)

        buildargs:
          imagebase: $(inputs.params.registry)/$(inputs.params.agent_image_dev):$(inputs.params.version_id)-context
          agent_version: $(inputs.params.agent_version)

        labels:
          quay.expires-after: 48h

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.agent_image_dev)
            tag: $(inputs.params.version_id)
          - registry: $(inputs.params.registry)/$(inputs.params.agent_image_dev)
            tag: latest

      - name: agent-template-ubuntu-s3
        task_type: dockerfile_template
        tags: ["ubuntu", "release"]
        distro: ubuntu

        inputs:
          - release_version
          - s3_bucket

        output:
          - dockerfile: $(inputs.params.s3_bucket)/mongodb-agent/$(inputs.params.release_version)/ubuntu/Dockerfile

      - name: agent-context-ubuntu-release
        task_type: docker_build
        dockerfile: scripts/dev/templates/agent/Dockerfile.builder
        tags: ["ubuntu", "release"]
        buildargs:
          agent_version: $(inputs.params.agent_version)
          tools_version: $(inputs.params.tools_version)
          agent_distro: linux_x86_64
          tools_distro: ubuntu1604-x86_64

        labels:
          quay.expires-after: Never

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.agent_image)
            tag: $(inputs.params.agent_version)-context

      - name: agent-ubuntu-release
        task_type: docker_build
        tags: ["ubuntu", "release"]
        distro: ubuntu

        dockerfile: scripts/dev/templates/agent/Dockerfile.ubuntu-$(inputs.params.version_id)

        buildargs:
          imagebase: $(inputs.params.registry)/$(inputs.params.agent_image):$(inputs.params.agent_version)-context
          agent_version: $(inputs.params.agent_version)

        labels:
          quay.expires-after: Never

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.agent_image)
            tag: $(inputs.params.agent_version)

  - name: agent-ubi
    vars:
      context: .
      template_context: scripts/dev/templates/agent

    inputs:
      - agent_version
      - tools_version
      - agent_image
      - agent_image_dev

    stages:
      - name: agent-ubi-context
        task_type: docker_build
        dockerfile: scripts/dev/templates/agent/Dockerfile.builder
        tags: ["ubi"]
        buildargs:
          agent_version: $(inputs.params.agent_version)
          tools_version: $(inputs.params.tools_version)
          agent_distro: rhel7_x86_64
          tools_distro: rhel70-x86_64

        labels:
          quay.expires-after: 48h

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.agent_image_dev)
            tag: $(inputs.params.version_id)-context

      - name: agent-template-ubi
        task_type: dockerfile_template
        distro: ubi
        tags: ["ubi"]

        output:
          - dockerfile: scripts/dev/templates/agent/Dockerfile.ubi-$(inputs.params.version_id)

      - name: agent-ubi-build
        task_type: docker_build
        tags: ["ubi"]

        dockerfile: scripts/dev/templates/agent/Dockerfile.ubi-$(inputs.params.version_id)

        buildargs:
          imagebase: $(inputs.params.registry)/$(inputs.params.agent_image_dev):$(inputs.params.version_id)-context
          agent_version: $(inputs.params.agent_version)

        labels:
          quay.expires-after: 48h

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.agent_image_dev)
            tag: $(inputs.params.version_id)
          - registry: $(inputs.params.registry)/$(inputs.params.agent_image_dev)
            tag: latest

      - name: agent-template-ubi-s3
        task_type: dockerfile_template
        tags: ["ubi", "release"]
        distro: ubi

        inputs:
          - release_version

        output:
          - dockerfile: $(inputs.params.s3_bucket)/mongodb-agent/$(inputs.params.release_version)/ubi/Dockerfile

      - name: agent-context-ubi-release
        task_type: docker_build
        dockerfile: scripts/dev/templates/agent/Dockerfile.builder
        tags: ["ubi", "release"]
        buildargs:
          agent_version: $(inputs.params.agent_version)
          tools_version: $(inputs.params.tools_version)
          agent_distro: rhel7_x86_64
          tools_distro: rhel70-x86_64

        labels:
          quay.expires-after: Never

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.agent_image)
            tag: $(inputs.params.agent_version)-context

      - name: agent-ubi-release
        task_type: docker_build
        tags: ["ubi", "release"]
        dockerfile: scripts/dev/templates/agent/Dockerfile.ubi-$(inputs.params.version_id)

        buildargs:
          imagebase: $(inputs.params.registry)/$(inputs.params.agent_image):$(inputs.params.agent_version)-context
          agent_version: $(inputs.params.agent_version)

        labels:
          quay.expires-after: Never

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.agent_image)
            tag: $(inputs.params.agent_version)

  - name: readiness-probe-init
    vars:
      context: .

    inputs:
      - readiness_probe_image
      - readiness_probe_image_dev

    stages:
      - name: readiness-init-context-build
        task_type: docker_build
        dockerfile: scripts/dev/templates/readiness/Dockerfile.builder
        tags: ["readiness-probe"]
        labels:
          quay.expires-after: 48h

        buildargs:
          builder_image: $(inputs.params.builder_image)

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.readiness_probe_image_dev)
            tag: $(inputs.params.version_id)-context

      - name: readiness-init-build
        task_type: docker_build
        dockerfile: scripts/dev/templates/readiness/Dockerfile.readiness

        labels:
          quay.expires-after: 48h

        tags: ["readiness-probe"]
        buildargs:
          imagebase: $(inputs.params.registry)/$(inputs.params.readiness_probe_image_dev):$(inputs.params.version_id)-context

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.readiness_probe_image_dev)
            tag: $(inputs.params.version_id)
          - registry: $(inputs.params.registry)/$(inputs.params.readiness_probe_image_dev)
            tag: latest

      - name: readiness-init-context-release
        task_type: docker_build
        dockerfile: scripts/dev/templates/readiness/Dockerfile.builder
        tags: ["readiness-probe", "release"]

        labels:
          quay.expires-after: Never

        buildargs:
          builder_image: $(inputs.params.builder_image)

        inputs:
          - release_version

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.readiness_probe_image)
            tag: $(inputs.params.release_version)-context

      - name: readiness-init-build-release
        task_type: docker_build
        dockerfile: scripts/dev/templates/readiness/Dockerfile.readiness
        tags: ["readiness-probe", "release"]

        buildargs:
          imagebase: $(inputs.params.registry)/$(inputs.params.readiness_probe_image):$(inputs.params.release_version)-context

        labels:
          quay.expires-after: Never

        inputs:
          - release_version

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.readiness_probe_image)
            tag: $(inputs.params.release_version)

  - name: version-post-start-hook-init
    vars:
      context: .

    inputs:
      - version_post_start_hook_image
      - version_post_start_hook_image_dev

    stages:
      - name: version-post-start-hook-init-context-build
        task_type: docker_build
        dockerfile: scripts/dev/templates/versionhook/Dockerfile.builder
        tags: ["post-start-hook"]

        buildargs:
          builder_image: $(inputs.params.builder_image)

        labels:
          quay.expires-after: 48h

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.version_post_start_hook_image_dev)
            tag: $(inputs.params.version_id)-context

      - name: version-post-start-hook-init-build
        task_type: docker_build
        dockerfile: scripts/dev/templates/versionhook/Dockerfile.versionhook
        tags: ["post-start-hook"]
        buildargs:
          imagebase: $(inputs.params.registry)/$(inputs.params.version_post_start_hook_image_dev):$(inputs.params.version_id)-context

        labels:
          quay.expires-after: 48h

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.version_post_start_hook_image_dev)
            tag: $(inputs.params.version_id)
          - registry: $(inputs.params.registry)/$(inputs.params.version_post_start_hook_image_dev)
            tag: latest

      - name: version-post-start-hook-init-context-release
        task_type: docker_build
        dockerfile: scripts/dev/templates/versionhook/Dockerfile.builder
        tags: ["release", "post-start-hook"]

        labels:
          quay.expires-after: Never

        buildargs:
          builder_image: $(inputs.params.builder_image)

        inputs:
          - release_version

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.version_post_start_hook_image)
            tag: $(inputs.params.release_version)-context

      - name: version-post-start-hook-init-build-release
        task_type: docker_build
        dockerfile: scripts/dev/templates/versionhook/Dockerfile.versionhook
        tags: ["release", "post-start-hook"]
        buildargs:
          imagebase: $(inputs.params.registry)/$(inputs.params.version_post_start_hook_image):$(inputs.params.release_version)-context

        labels:
          quay.expires-after: Never

        inputs:
          - release_version

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.version_post_start_hook_image)
            tag: $(inputs.params.release_version)
